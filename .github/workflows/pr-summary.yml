name: PR Summary Comment

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  contents: read
  pull-requests: write

jobs:
  summarize:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate summary
        id: gen
        shell: bash
        run: |
          set -euo pipefail
          base="${{ github.event.pull_request.base.sha }}"
          head="${{ github.event.pull_request.head.sha }}"
          git fetch --no-tags --prune --progress origin "$base" "$head" || true

          sbase=$(git rev-parse --short "$base")
          shead=$(git rev-parse --short "$head")
          branch='${{ github.head_ref }}'

          {
            echo "**Changes: ${base}..${head}**"
            echo
            echo "- Branch: \`$branch\`"
            echo "- Range: \`$sbase\`..\`$shead\`"
            echo
            echo "**Commits**"
            git log --pretty=format:'- %h %s (%an, %ad)' --date=short "$base..$head" || true
            echo
            echo "**Files Changed**"
            added=$(git diff --diff-filter=A --name-only "$base..$head" || true)
            modified=$(git diff --diff-filter=M --name-only "$base..$head" || true)
            deleted=$(git diff --diff-filter=D --name-only "$base..$head" || true)
            renamed=$(git diff --diff-filter=R --name-status "$base..$head" || true)
            if [[ -n "${added}" ]]; then
              echo "- Added:"
              while IFS= read -r f; do
                [[ -n "$f" ]] && echo "  - \`$f\`"
              done <<< "$added"
            fi
            if [[ -n "${modified}" ]]; then
              echo "- Modified:"
              while IFS= read -r f; do
                [[ -n "$f" ]] && echo "  - \`$f\`"
              done <<< "$modified"
            fi
            if [[ -n "${deleted}" ]]; then
              echo "- Deleted:"
              while IFS= read -r f; do
                [[ -n "$f" ]] && echo "  - \`$f\`"
              done <<< "$deleted"
            fi
            if [[ -n "${renamed}" ]]; then
              echo "- Renamed:"
              while IFS=$'\t' read -r code old new; do
                [[ -n "$old" && -n "$new" ]] && echo "  - \`$old\` â†’ \`$new\`"
              done <<< "$renamed"
            fi
          } > summary.md

          echo "summary_path=$PWD/summary.md" >> "$GITHUB_OUTPUT"

      - name: Create or update PR comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const path = '${{ steps.gen.outputs.summary_path }}';
            const body = `<!-- changes-summary -->\n${fs.readFileSync(path, 'utf8')}`;
            const { owner, repo } = context.repo;
            const issue_number = context.issue.number;
            // Find existing summary comment by marker
            const { data: comments } = await github.rest.issues.listComments({ owner, repo, issue_number, per_page: 100 });
            const existing = comments.find(c => c.body && c.body.includes('<!-- changes-summary -->'));
            if (existing) {
              await github.rest.issues.updateComment({ owner, repo, comment_id: existing.id, body });
            } else {
              await github.rest.issues.createComment({ owner, repo, issue_number, body });
            }

